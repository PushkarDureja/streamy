[{"/home/pushkardureja/streamy/client/src/index.js":"1","/home/pushkardureja/streamy/client/src/components/app.js":"2","/home/pushkardureja/streamy/client/src/reducers/index.js":"3","/home/pushkardureja/streamy/client/src/components/navbar.js":"4","/home/pushkardureja/streamy/client/src/components/Home.js":"5","/home/pushkardureja/streamy/client/src/components/login.js":"6","/home/pushkardureja/streamy/client/src/components/createStream.js":"7","/home/pushkardureja/streamy/client/src/components/signup.js":"8","/home/pushkardureja/streamy/client/src/config/firebase.js":"9","/home/pushkardureja/streamy/client/src/actions/auth.js":"10"},{"size":428,"mtime":1612099930534,"results":"11","hashOfConfig":"12"},{"size":1219,"mtime":1612211702739,"results":"13","hashOfConfig":"12"},{"size":330,"mtime":1612099930534,"results":"14","hashOfConfig":"12"},{"size":1899,"mtime":1612190902132,"results":"15","hashOfConfig":"12"},{"size":1366,"mtime":1612210708822,"results":"16","hashOfConfig":"12"},{"size":1983,"mtime":1612099930534,"results":"17","hashOfConfig":"12"},{"size":3844,"mtime":1612196692620,"results":"18","hashOfConfig":"12"},{"size":2334,"mtime":1612119445658,"results":"19","hashOfConfig":"12"},{"size":478,"mtime":1612099930534,"results":"20","hashOfConfig":"12"},{"size":185,"mtime":1612099930534,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1s4hxih",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/pushkardureja/streamy/client/src/index.js",[],["47","48"],"/home/pushkardureja/streamy/client/src/components/app.js",["49"],"/home/pushkardureja/streamy/client/src/reducers/index.js",[],"/home/pushkardureja/streamy/client/src/components/navbar.js",["50","51"],"import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport fb from '../config/firebase'\nimport {clearUser} from '../actions/auth'\nconst Navbar = (props)=>{\n\n    function handleLogout(e){\n        e.preventDefault()\n        fb.auth().signOut().then(()=>{\n            props.dispatch(clearUser());\n        })\n    }\n    \n\n\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n            <Link className=\"navbar-brand\" to = '/'>Streamy</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex justify-content-end\" style = {{width:'100%'}}>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" aria-current=\"page\" to = '/live'>Go Live</Link>\n                    </li>\n                    {props.user ?\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" onClick = {handleLogout} type = \"button\">Logout</a>\n                        </li>:\n                        <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to = '/login'>Login</Link>\n                    </li>\n                     }\n                    \n                \n                </ul>\n            \n            </div>\n        </div>\n        </nav>\n    )\n}\nconst mapStateToProps = (state)=>{\n    return {\n        user:state.user\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","/home/pushkardureja/streamy/client/src/components/Home.js",["52"],"/home/pushkardureja/streamy/client/src/components/login.js",["53"],"import React, {useState,useEffect} from 'react'\nimport fb from '../config/firebase'\n\nimport {connect} from 'react-redux'\nimport {setUser,clearUser} from '../actions/auth'\n\nconst Login = ({dispatch})=>{\n\n    const [email,setEmail] = useState('');\n    const [pass,setPass] = useState('');\n\n    useEffect(()=>{\n        const unsubscribe = fb.auth().onAuthStateChanged(user=>{\n            if(user){\n                dispatch(setUser(user));\n\n            }\n            else\n                dispatch(clearUser())\n        })\n        return ()=>unsubscribe()\n    },[])\n\nfunction handleLogin(e){\n    e.preventDefault()\n    fb.auth().signInWithEmailAndPassword(email,pass)\n    .then(user=>{\n        console.log(user)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n}\n\n    return(\n        <form style = {{maxWidth:'30vw',margin:'2% auto', padding:'2%',minWidth:'200px'}}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value = {email}  onChange = {(e)=>setEmail(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" value = {pass} onChange = {(e)=>setPass(e.target.value)}/>\n            </div>\n            <div className=\"mb-3 form-check\">\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\n                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\n            </div>\n            <button className=\"btn btn-primary\" onClick = {handleLogin}>Submit</button>\n    </form>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        user : state.user\n    }\n}\nexport default connect(mapStateToProps)(Login)","/home/pushkardureja/streamy/client/src/components/createStream.js",["54","55","56","57"],"import React, {useState,useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {generatePath, Redirect} from 'react-router-dom'\nimport {nanoid} from 'nanoid'\nimport { setUser } from '../actions/auth'\n\nconst CreateStream = (props)=>{\n\n    const [title,setTitle] =  useState('');\n    const [description,setDescription] = useState('');\n    const [streamKey,setKey] = useState();\n    \n    useEffect(()=>{\n        setKey(nanoid);\n    },[])\n\n    function handleCreateStream (e){\n        e.preventDefault()\n        console.log(props.user.email,title,description,streamKey)\n        fetch(`/api/createstream/${props.user.email}`,{\n            method : 'POST',\n            headers : new Headers ({\n                'Accept' : 'application/json' ,\n                'Content-Type': 'application/json'\n            }),\n            body : JSON.stringify({\n                \n                title : title,\n                description : description,\n                key : streamKey,\n            })\n        \n        \n        })\n    }\n\n    function generateKey(){\n        setKey(nanoid());\n    }\n\n\n    if(props.user === null)\n        return <Redirect to = '/login' exact />\n    return (\n        <React.Fragment>\n        <div className=\"container mt-5\">\n            <h4 className = 'text-center'>New Stream</h4>\n            <hr className=\"my-4\"/>\n\n            <div className=\"col-xs-12 col-sm-12 col-md-8 col-lg-6\" style = {{margin: \"auto\"}}>\n                <div className = 'row'>\n                <form style = {{maxWidth:'30vw',margin:'2% auto', padding:'2%',minWidth:'200px'}} onSubmit = {handleCreateStream} id = 'f1'>\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Title</label>\n                        <input  class=\"form-control\" required id=\"exampleFormControlInput1\" placeholder=\"Enter Title\" value = {title} onChange = {(e)=>setTitle(e.target.value)} />\n                        </div>\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Description</label>\n                        <textarea class=\"form-control\" required placeholder = \"Enter Description\" id=\"exampleFormControlTextarea1\" rows=\"3\" value = {description} onChange = {(e)=>setDescription(e.target.value)}></textarea>\n                    </div>\n                    \n                </form>\n                </div>\n                <div className=\"row\">\n                    <h5 className = 'col-6 col-xs-12 text-center py-1'>{streamKey}</h5>\n                    <div className = 'btn btn-dark col-4' type = \"button\" onClick = {generateKey}>New Key</div>\n                </div>\n\n                <div className = 'row my-4 d-flex justify-content-center'>\n                    <button className = 'btn btn-dark col-4' form = \"f1\">Submit</button>\n                </div>\n                \n            </div>\n        </div>\n\n        <div className=\"container mt-5\">\n            <h4>How to Stream</h4>\n            <hr className=\"my-4\"/>\n\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    <p>\n                        You can use <a target=\"_blank\" href=\"https://obsproject.com/\">OBS</a> or\n                        <a target=\"_blank\" href=\"https://www.xsplit.com/\">XSplit</a> to Live stream. If you're\n                        using OBS, go to Settings Stream and select Custom from service dropdown.\n                        Enter <b>rtmp://127.0.0.1:1935/live</b> in server input field. Also, add your stream key.\n                        Click apply to save.\n                    </p>\n                </div>\n            </div>\n        </div>\n    </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        user : state.user\n    }\n}\nexport default connect(mapStateToProps)(CreateStream)","/home/pushkardureja/streamy/client/src/components/signup.js",["58"],"import React, {useState,useEffect} from 'react'\nimport fb from '../config/firebase'\nimport {connect} from 'react-redux'\nimport {setUser,clearUser} from '../actions/auth'\n\nconst SignUp = (props)=>{\n    const [email,setEmail] = useState('');\n    const [pass,setPass] = useState('');\n\n    useEffect(()=>{\n        const unsubscribe = fb.auth().onAuthStateChanged(user=>{\n            if(user){\n                props.dispatch(setUser(user));\n            }\n            else\n                props.dispatch(clearUser())\n        })\n        return ()=>unsubscribe()\n    },[])\n\nfunction handleSignUp(e){\n    e.preventDefault();\n    fb.auth().createUserWithEmailAndPassword(email,pass)\n        .then(user=>{\n            console.log(user.user.email)\n            fetch('/api/createuser',{\n                method : 'POST',\n                headers: new Headers({\n                    'Accept' : 'application/json' ,\n                    'Content-Type': 'application/json'\n                }),\n                body : JSON.stringify({email :user.user.email})\n            })\n        })\n        .catch(err=>console.log(err))\n\n    \n}\n\n    return(\n        <form style = {{maxWidth:'30vw',margin:'2% auto', padding:'2%',minWidth:'200px'}}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value = {email}  onChange = {(e)=>setEmail(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" value = {pass} onChange = {(e)=>setPass(e.target.value)}/>\n            </div>\n            <div className=\"mb-3 form-check\">\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\n                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\n            </div>\n            <button className=\"btn btn-primary\" onClick = {handleSignUp}>Submit</button>\n    </form>\n    )\n\n   \n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        user : state.user\n    }\n}\nexport default connect(mapStateToProps)(SignUp)","/home/pushkardureja/streamy/client/src/config/firebase.js",[],"/home/pushkardureja/streamy/client/src/actions/auth.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":26,"column":7,"nodeType":"65","endLine":26,"endColumn":9,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":31,"column":29,"nodeType":"73","endLine":31,"endColumn":94},{"ruleId":"74","severity":1,"message":"75","line":26,"column":25,"nodeType":"73","endLine":26,"endColumn":91},{"ruleId":"63","severity":1,"message":"64","line":22,"column":7,"nodeType":"65","endLine":22,"endColumn":9,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":3,"column":9,"nodeType":"69","messageId":"70","endLine":3,"endColumn":21},{"ruleId":"67","severity":1,"message":"78","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":83,"column":37,"nodeType":"73","endLine":83,"endColumn":87},{"ruleId":"79","severity":1,"message":"80","line":84,"column":25,"nodeType":"73","endLine":84,"endColumn":75},{"ruleId":"63","severity":1,"message":"81","line":19,"column":7,"nodeType":"65","endLine":19,"endColumn":9,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["85"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["86"],"'generatePath' is defined but never used.","'setUser' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [dispatch]",{"range":"93","text":"94"},{"range":"95","text":"94"},"Update the dependencies array to be: [props]",{"range":"96","text":"97"},[670,672],"[dispatch]",[556,558],[561,563],"[props]"]